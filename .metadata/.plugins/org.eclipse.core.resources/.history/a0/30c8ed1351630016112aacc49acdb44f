package kgs_20160816_01.process;

import java.util.Scanner;

import kgs_20160816_01.domain.Article;
import kgs_20160816_01.repository.ArticleRepository;

public class ArticleProcess {

	private Scanner keyboard = new Scanner(System.in);

	public void write() {

		System.out.println("게시글 쓰기 모드");			

		//		if(ArticleRepository.lastArticlePosition == ArticleRepository.MAX_ARTICLE_COUNT) {
		//			System.out.println("저장소에 빈공간이 없습니다.");
		//		}  else {
		//			//게시글 정보 : 번호(자동), 제목, 내용, 작성자, 조회수(자동)
		//			System.out.print("제   목 : ");
		//			String title = keyboard.next();
		//			System.out.print("내   용 : ");
		//			String content = keyboard.next();
		//			System.out.print("작성자 : ");
		//			String writer = keyboard.next();
		//
		//			ArticleRepository.articles[ArticleRepository.lastArticlePosition] = new Article(title, content, writer);
		//			ArticleRepository.articles[ArticleRepository.lastArticlePosition].setNumber(ArticleRepository.lastArticlePosition + 1);
		//
		//			ArticleRepository.lastArticlePosition = ArticleRepository.lastArticlePosition + 1;		
		//		}


		//게시글 정보 : 번호(자동), 제목, 내용, 작성자, 조회수(자동)
		System.out.print("제   목 : ");
		String title = keyboard.next();
		System.out.print("내   용 : ");
		String content = keyboard.next();
		System.out.print("작성자 : ");
		String writer = keyboard.next();

		Article newArticle = new Article(title, content, writer);
		newArticle.setNumber(ArticleRepository.lastArticleNumber + 1);

		ArticleRepository.articles.add(newArticle);

		ArticleRepository.lastArticleNumber = ArticleRepository.lastArticleNumber + 1;

	}

	public void list() {

		//		System.out.println("게시글 목록 모드");				
		//		System.out.println("번호\t제목\t작성자\t조회수");
		//		if(ArticleRepository.lastArticlePosition == 0) {
		//			System.out.println("등록된 글이 없습니다.");
		//		} else {
		//			for(int i = 0 ; i < ArticleRepository.lastArticlePosition ; i++) {
		//				System.out.print(ArticleRepository.articles[i].getNumber() + "\t");
		//				System.out.print(ArticleRepository.articles[i].getTitle() + "\t");
		//				System.out.print(ArticleRepository.articles[i].getContent() + "\t");
		//				System.out.println(ArticleRepository.articles[i].getReadCount());
		//			}
		//		}

		System.out.println("게시글 목록 모드");				
		System.out.println("번호\t제목\t작성자\t조회수");
		if(ArticleRepository.articles.size() == 0) {
			System.out.println("등록된 글이 없습니다.");
		} else {
			for(int i = 0 ; i < ArticleRepository.articles.size() ; i++) {
				System.out.print(ArticleRepository.articles.get(i).getNumber() + "\t");
				System.out.print(ArticleRepository.articles.get(i).getTitle() + "\t");
				System.out.print(ArticleRepository.articles.get(i).getContent() + "\t");
				System.out.println(ArticleRepository.articles.get(i).getReadCount());
			}
		}

	}

	public void read() {

		System.out.println("게시글 조회 모드");

		if(ArticleRepository.articles.size() == 0) {
			System.out.println("등록된 글이 없습니다.");
		} else {
			System.out.print("조회 번호 : ");
			int number = keyboard.nextInt();

			boolean isFind = false;
			for(int i = 0 ; i < ArticleRepository.articles.size() ; i++) {
				if(number == ArticleRepository.articles.get(i).getNumber()) {
					ArticleRepository.articles.get(i).setReadCount(ArticleRepository.articles.get(i).getReadCount() + 1);

					System.out.println("번   호 : " + ArticleRepository.articles.get(i).getNumber());
					System.out.println("제   목 : " + ArticleRepository.articles.get(i).getTitle());
					System.out.println("내   용 : " + ArticleRepository.articles.get(i).getContent());
					System.out.println("작성자 : " + ArticleRepository.articles.get(i).getWriter());							
					System.out.println("조회수 : " + ArticleRepository.articles.get(i).getReadCount());

					isFind = true;
					break;
				}
			}

			if(isFind == false) {
				System.out.println("조회한 글이 없습니다.");
			}
		}

	}

	public void update() {

		System.out.println("게시글 수정 모드");
		if(ArticleRepository.articles.size() == 0) {
			System.out.println("등록된 글이 없습니다.");
		} else {
			System.out.print("수정할 글 번호 : ");
			int number = keyboard.nextInt();

			boolean isFind = false;
			for(int i = 0 ; i < ArticleRepository.articles.size() ; i++) {
				if(number == ArticleRepository.articles.get(i).getNumber()) {
					ArticleRepository.articles.get(i).setReadCount(ArticleRepository.articles.get(i).getReadCount() + 1);

					while(true) {
						System.out.println("수정 항목 선택");
						System.out.println("1. 제목");
						System.out.println("2. 내용");
						System.out.println("3. 작성자");
						System.out.println("4. 취소");

						int updateMenu = keyboard.nextInt();

						if(updateMenu == 1) {
							System.out.println("제목 수정 모드");
							System.out.print("수정할 제목 : ");
							String title = keyboard.next();									
							ArticleRepository.articles.get(i).setTitle(title);									
						} else if(updateMenu == 2) {
							System.out.println("내용 수정 모드");
							System.out.print("수정할 내용 : ");
							String content = keyboard.next();									
							ArticleRepository.articles.get(i).setContent(content);
						} else if(updateMenu == 3) {
							System.out.println("작성자 수정 모드");
							System.out.print("수정할 작성자 : ");
							String  writer = keyboard.next();									
							ArticleRepository.articles.get(i).setWriter(writer);
						} else if(updateMenu == 4) {
							System.out.println("수정 취소");
							break;
						}  else {
							System.out.println("수정할 항목을 다시 선택해 주세요.");
						}				

					}

					isFind = true;
					break;
				}
			}

			if(isFind == false) {
				System.out.println("수정할 글이 없습니다.");
			}
		}
	}

	public void delete() {

		System.out.println("게시글 삭제 모드");
		if(ArticleRepository.articles.size() == 0) {
			System.out.println("등록된 글이 없습니다.");
		} else {
			System.out.print("삭제할 글 번호 : ");
			int number = keyboard.nextInt();

			boolean isFind = false;
			for(int i = 0 ; i < ArticleRepository.articles.size() ; i++) {
				if(number == ArticleRepository.articles.get(i).getNumber()) {
					ArticleRepository.articles.get(i).setReadCount(ArticleRepository.articles.get(i).getReadCount() + 1);

					while(true) {
						System.out.println("삭제 항목 선택");
						System.out.println("1. 삭제");
						System.out.println("2. 취소");

						int deleteMenu = keyboard.nextInt();

						if(deleteMenu == 1) {
							ArticleRepository.articles.remove(i);
						} else if(deleteMenu == 2) {
							break;
						}  else {
							System.out.println("삭제할 항목을 다시 선택해 주세요.");
						}				

					}

					isFind = true;
					break;
				}
			}

			if(isFind == false) {
				System.out.println("삭제할 글이 없습니다.");
			}
		}

	}

}
